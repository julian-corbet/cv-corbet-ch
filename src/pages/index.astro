---
import "@fontsource-variable/dm-sans";
import Container from "../components/Container.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { Icon } from "astro-icon/components";
---

<html lang="en">
  <head>
    <script is:inline>
      // Theme init + toggle (unverändert im Verhalten)
      const initTheme = () => {
        const theme = localStorage.getItem('theme') || 'black';
        document.documentElement.setAttribute('data-theme', theme);
        if (theme === 'black') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
        return theme;
      };
      const updateToggle = (theme) => {
        const toggle = document.querySelector('input[data-toggle-theme]');
        if (toggle) toggle.checked = theme === 'lofi';
      };
      const currentTheme = initTheme();
      updateToggle(currentTheme);
      window.changeTheme = (checked) => {
        const theme = checked ? 'lofi' : 'black';
        document.documentElement.setAttribute('data-theme', theme);
        if (theme === 'black') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
        localStorage.setItem('theme', theme);
      };
      document.addEventListener('change', (e) => {
        if (e.target.matches('input[data-toggle-theme]')) {
          window.changeTheme(e.target.checked);
        }
      });
    </script>

    <script is:inline>
      // Hash-Links: Akkordeon öffnen & scrollen
      function handleHash() {
        const hash = window.location.hash.substring(1);
        if (!hash) return;
        const targetElement = document.getElementById(hash);
        if (!targetElement) return;

        const collapseContent = targetElement.closest('.collapse-content');
        if (collapseContent) {
          const collapse = collapseContent.closest('.collapse');
          const checkbox = collapse?.querySelector('input[type="checkbox"]');
          if (checkbox && !checkbox.checked) checkbox.checked = true;
        } else if (targetElement.classList.contains('collapse')) {
          const checkbox = targetElement.querySelector('input[type="checkbox"]');
          if (checkbox && !checkbox.checked) checkbox.checked = true;
        }
        targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
      window.addEventListener('DOMContentLoaded', handleHash);
      window.addEventListener('hashchange', handleHash);
    </script>

    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.webp" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <style is:global>@import "/src/styles/global.css";</style>
    <title>Corbet CV</title>
  </head>

  <body class="flex flex-col min-h-screen">
    <Header />

    <div class="flex items-center absolute top-4 right-4 md:top-6 md:right-6 lg:top-8 lg:right-8 xl:top-10 xl:right-10 z-10">
      <Icon name="carbon:moon" class="w-4 h-4" />
      <input
        type="checkbox"
        data-toggle-theme="black,lofi"
        class="toggle toggle-sm mx-1 bg-secondary"
      />
      <Icon name="carbon:light" class="w-4 h-4" />
    </div>

    <div class="divider mx-auto h-fit max-w-3xl w-[95vw] flex flex-nowrap bg-secondary"></div>

    <main class="mx-auto flex-grow max-h-[90vh] md:max-h-[70vh] max-w-3xl overflow-y-scroll py-2 grid w-[95vw]">
      <div class="container">
        <Container />
      </div>
    </main>

    <Footer class="flex justify-center items-center py-4" />
  </body>
</html>

<style is:global>
  body { font-family: "DM Sans Variable", sans-serif; }

  .overflow-y-scroll::-webkit-scrollbar { width: 3px; }
  .overflow-y-scroll::-webkit-scrollbar-thumb { background-color: oklch(var(--s)); }
  .overflow-y-scroll { scrollbar-width: 1px; }

  @media (max-width: 768px) { .container { flex-direction: column; } }
  @media (min-width: 768px) { .container { display: flex; flex-wrap: wrap; } }

  [data-theme=black] .signal-icon { filter: invert(1); }
  [data-theme=black] .matrix-icon { filter: invert(1); }
  [data-theme=black] .threema-light { display: none; }
  [data-theme=black] .threema-dark { display: block; }
</style>
